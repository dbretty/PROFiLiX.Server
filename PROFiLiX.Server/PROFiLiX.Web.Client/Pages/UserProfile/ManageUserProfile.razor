@page "/UserProfile/Manage-User-Profile"
@page "/UserProfile/Manage-User-Profile/{Id:int}"

@using PROFiLiX.Web.Shared.Models.Enum
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

<PageTitle>Manage User Profile</PageTitle>

<MudPaper Class="pa-2 ma-2" Elevation="25">

    <MudGrid Spacing="12" Justify="Justify.Center">

        <MudItem md="12">

			<EditForm Model="@UserProfileModel" OnValidSubmit="HandleSave">
				<DataAnnotationsValidator/>

				<MudText Typo="Typo.h5" Align="Align.Left" Class="px-4">
					Manage User Profile
				</MudText>

				<br />

				<MudGrid>

					<MudItem md="12" xs="12">
						<MudText Typo="Typo.body1">User Name</MudText>
						<MudTextField @bind-Value="UserProfileModel.UserName" For="@(() => UserProfileModel.UserName)" />
					</MudItem>

					<MudItem md="12" xs="12">
						<MudText Typo="Typo.body1">Profile Directory</MudText>
						<MudTextField @bind-Value="UserProfileModel.ProfileDirectory" For="@(() => UserProfileModel.ProfileDirectory)" />
					</MudItem>

					<MudItem md="12" xs="12">
						<MudText Typo="Typo.body1">Profile Size</MudText>
						<MudNumericField @bind-Value="UserProfileModel.ProfileSize" Variant="Variant.Text" Min="0" Max="1000000" />
					</MudItem>

					<MudItem md="12" xs="12">
						<MudText Typo="Typo.body1">Temp Data Size</MudText>
						<MudNumericField @bind-Value="UserProfileModel.TempSize" Variant="Variant.Text" Min="0" Max="1000000" />
						</MudItem>

					<MudItem md="12" xs="12">
						<MudText Typo="Typo.body1">Profile Type</MudText>
						<MudSelect @bind-Value="UserProfileModel.ProfileType">
							@foreach (var margin in Enum.GetValues(typeof(EUCProfileType)).Cast<EUCProfileType>())
							{
								<MudSelectItem Value="margin">@margin</MudSelectItem>
							}
						</MudSelect>
					</MudItem>

					<MudItem md="12" xs="12">
						<MudButton ButtonType="ButtonType.Submit" FullWidth="true" Variant="Variant.Outlined" Color="Color.Primary">Save</MudButton>
					</MudItem>

					<MudItem md="12" xs="12">
						<MudButton Variant="Variant.Outlined" FullWidth="true" Color="Color.Primary" @onclick="() => NavigateToProfileList()">Return To User Profile List</MudButton>
					</MudItem>

				</MudGrid>

			</EditForm>

		</MudItem>
	</MudGrid>
	

</MudPaper>

@code {
	public UserProfile UserProfileModel { get; set; } = new();

	[Parameter]
	public int Id { get; set;  }

	private async Task HandleSave()
	{
		if (UserProfileModel.Id > 0)
		{
			var result = await UserProfileService.UpdateUserProfileAsync(UserProfileModel);
			UserProfileModel = new();
		} else
		{
			var result = await UserProfileService.AddUserProfileAsync(UserProfileModel);
			UserProfileModel = new();
		}

		NavigationManager.NavigateTo("/UserProfile/User-Profile-List");
	}

	protected override async Task OnParametersSetAsync()
	{
		if (Id > 0)
		{
			UserProfileModel = await UserProfileService.GetUserProfileByIdAsync(Id);
		}
		
	}

	private void NavigateToProfileList()
	{
		NavigationManager.NavigateTo("/UserProfile/User-Profile-List");
	}
}
